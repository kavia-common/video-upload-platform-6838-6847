{"is_source_file": true, "format": "Python", "description": "This is a FastAPI-based backend source file for handling video uploads, including endpoint definitions, middleware setup, helper functions, and data models. It provides functionality for health check, uploading video files with size validation, and documentation info.", "external_files": ["fastapi", "starlette.responses", "starlette.requests", "pydantic", "os", "uuid", "datetime"], "external_methods": ["fastapi.FastAPI", "fastapi.File", "fastapi.UploadFile", "fastapi.HTTPException", "fastapi.status", "fastapi.Request", "fastapi.middleware.cors.CORSMiddleware", "fastapi.responses.JSONResponse", "pydantic.BaseModel", "pydantic.Field", "os.getenv", "os.makedirs", "os.path.exists", "os.path.join", "os.remove", "os.replace", "uuid.uuid4", "datetime.utcnow", "datetime.strftime"], "published": ["health_check", "ensure_upload_dir", "upload_video", "docs_usage"], "classes": [{"name": "ErrorResponse", "description": "Standardized error response model with a 'detail' message."}, {"name": "UploadResponse", "description": "Response model for successful upload, including filename, size, content type, and directory info."}], "methods": [{"name": "str _safe_destination_filename(original_name: str)", "description": "Generates a safe, unique filename preserving extension with timestamp and UUID.", "scope": "", "scopeKind": ""}, {"name": "int _enforce_file_size(file: UploadFile)", "description": "Streams uploaded file in chunks, enforces maximum size, and saves to a temporary file.", "scope": "", "scopeKind": ""}, {"name": "dict docs_usage()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "None ensure_upload_dir()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "health_check()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "http_exception_handler(request: Request, exc: HTTPException)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "unhandled_exception_handler(request: Request, exc: Exception)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "UploadResponse upload_video(file: UploadFile = File(..., description=\"The video file to upload.\"))", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["app.get(\"/\")", "app.on_event(\"startup\")", "app.post(\"/upload\")", "app.get(\"/docs/usage\")", "app.exception_handler(HTTPException)", "app.exception_handler(Exception)"], "search-terms": ["video upload", "FastAPI video API", "file size limit", "upload endpoint", "media upload", "upload directory setup", "health check endpoint"], "state": 2, "file_id": 3, "knowledge_revision": 19, "git_revision": "53865f27e9c051f2f934f32c5c1cf1638de07845", "revision_history": [{"9": "892811bfdebd300bde79f66c4d114da912f791ca"}, {"10": "892811bfdebd300bde79f66c4d114da912f791ca"}, {"18": "53865f27e9c051f2f934f32c5c1cf1638de07845"}, {"19": "53865f27e9c051f2f934f32c5c1cf1638de07845"}], "ctags": [{"_type": "tag", "name": "ErrorResponse", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^class ErrorResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MAX_FILE_SIZE_BYTES", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^MAX_FILE_SIZE_BYTES = 500 * 1024 * 1024  # 500 MB$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UPLOAD_DIR", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^UPLOAD_DIR = os.getenv(\"UPLOAD_DIR\", \".\\/upload\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UploadResponse", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^class UploadResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_enforce_file_size", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^async def _enforce_file_size(file: UploadFile) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(file: UploadFile)"}, {"_type": "tag", "name": "_safe_destination_filename", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^def _safe_destination_filename(original_name: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(original_name: str)"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "content_type", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    content_type: Optional[str] = Field(None, description=\"Detected content type of the file.\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "detail", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    detail: str = Field(..., description=\"A human-readable description of the error.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ErrorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "docs_usage", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^def docs_usage() -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ensure_upload_dir", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^def ensure_upload_dir() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "filename", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    filename: str = Field(..., description=\"Original filename submitted by the client.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "http_exception_handler", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^async def http_exception_handler(request: Request, exc: HTTPException):$/", "language": "Python", "kind": "function", "signature": "(request: Request, exc: HTTPException)"}, {"_type": "tag", "name": "saved_as", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    saved_as: str = Field(..., description=\"Saved filename on server.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "size_bytes", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    size_bytes: int = Field(..., description=\"Size of the uploaded file in bytes.\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "unhandled_exception_handler", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^async def unhandled_exception_handler(request: Request, exc: Exception):$/", "language": "Python", "kind": "function", "signature": "(request: Request, exc: Exception)"}, {"_type": "tag", "name": "upload_dir", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    upload_dir: str = Field(..., description=\"Directory path where file is saved.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "upload_video", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^async def upload_video(file: UploadFile = File(..., description=\"The video file to upload.\")) ->/", "language": "Python", "typeref": "typename:UploadResponse", "kind": "function", "signature": "(file: UploadFile = File(..., description=\"The video file to upload.\"))"}], "hash": "7531cfdcc5fc017e657c4778df52ed86", "format-version": 4, "code-base-name": "video_upload_backend", "filename": "video_upload_backend/src/api/main.py", "fields": [{"name": "MAX_FILE_SIZE_BYTES = 500 * 1024 * 1024  # 500 MB", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "UPLOAD_DIR = os.getenv(\"UPLOAD_DIR\", \".\\/upload\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] content_type", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str detail", "scope": "ErrorResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str filename", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str saved_as", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "int size_bytes", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str upload_dir", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}]}