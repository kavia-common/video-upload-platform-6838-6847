{"is_source_file": true, "format": "Python", "description": "This is a complete FastAPI application implementing a video upload backend with size validation, directory management, and endpoint definitions for health check, upload, and documentation usage instructions.", "external_files": ["fastapi", "pydantic", "starlette.responses", "starlette.middleware.cors", "starlette.requests", "os", "uuid", "datetime"], "external_methods": ["FastAPI()", "File, UploadFile, HTTPException, status, Request", "CORSMiddleware", "JSONResponse", "BaseModel, Field", "os.makedirs", "os.path.exists", "os.remove", "os.replace", "os.path.join", "uuid.uuid4", "uuid.uuid4().hex", "datetime.utcnow", "datetime.strftime"], "published": ["health_check", "upload_video", "docs_usage"], "classes": [{"name": "ErrorResponse", "description": "Standardized error response model with a 'detail' message."}, {"name": "UploadResponse", "description": "Response model detailing saved file information, including filename, size, and location."}], "methods": [{"name": "health_check()", "description": "Health check endpoint returning a simple JSON message indicating service health.", "scope": "", "scopeKind": ""}, {"name": "None ensure_upload_dir()", "description": "Ensures the upload directory exists at startup.", "scope": "", "scopeKind": ""}, {"name": "str _safe_destination_filename(original_name: str)", "description": "Generates a safe, unique filename with timestamp and UUID, preserving the original extension.", "scope": "", "scopeKind": ""}, {"name": "int _enforce_file_size(file: UploadFile)", "description": "Streams the uploaded file to disk to enforce the size restriction of 500MB, raising error if exceeded.", "scope": "", "scopeKind": ""}, {"name": "UploadResponse upload_video(file: UploadFile = File(..., description=\"The video file to upload.\"))", "description": "Handles incoming video file uploads, enforces size limits, saves the file, and returns metadata.", "scope": "", "scopeKind": ""}, {"name": "dict docs_usage()", "description": "Provides a usage example (curl command) for the upload API.", "scope": "", "scopeKind": ""}, {"name": "http_exception_handler(request: Request, exc: HTTPException)", "description": "Handles HTTP exceptions, returning consistent JSON errors.", "scope": "", "scopeKind": ""}, {"name": "unhandled_exception_handler(request: Request, exc: Exception)", "description": "Handles unexpected exceptions with a generic error message.", "scope": "", "scopeKind": ""}], "calls": ["os.makedirs", "os.path.join", "os.replace", "os.remove", "uuid.uuid4", "datetime.utcnow", "datetime.strftime", "HTTPException", "JSONResponse"], "search-terms": ["video upload backend", "500MB size limit", "FastAPI file upload endpoint", "upload directory creation", "save uploaded file", "file size enforcement", "multipart/form-data video upload", "health check endpoint", "CORS middleware"], "state": 2, "file_id": 3, "knowledge_revision": 10, "git_revision": "892811bfdebd300bde79f66c4d114da912f791ca", "revision_history": [{"9": "892811bfdebd300bde79f66c4d114da912f791ca"}, {"10": "892811bfdebd300bde79f66c4d114da912f791ca"}], "ctags": [{"_type": "tag", "name": "ErrorResponse", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^class ErrorResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MAX_FILE_SIZE_BYTES", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^MAX_FILE_SIZE_BYTES = 500 * 1024 * 1024  # 500 MB$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UPLOAD_DIR", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^UPLOAD_DIR = \"\\/upload\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UploadResponse", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^class UploadResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_enforce_file_size", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^async def _enforce_file_size(file: UploadFile) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(file: UploadFile)"}, {"_type": "tag", "name": "_safe_destination_filename", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^def _safe_destination_filename(original_name: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(original_name: str)"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "content_type", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    content_type: Optional[str] = Field(None, description=\"Detected content type of the file.\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "detail", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    detail: str = Field(..., description=\"A human-readable description of the error.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ErrorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "docs_usage", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^def docs_usage() -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ensure_upload_dir", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^def ensure_upload_dir() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "filename", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    filename: str = Field(..., description=\"Original filename submitted by the client.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "http_exception_handler", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^async def http_exception_handler(request: Request, exc: HTTPException):$/", "language": "Python", "kind": "function", "signature": "(request: Request, exc: HTTPException)"}, {"_type": "tag", "name": "saved_as", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    saved_as: str = Field(..., description=\"Saved filename on server.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "size_bytes", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    size_bytes: int = Field(..., description=\"Size of the uploaded file in bytes.\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "unhandled_exception_handler", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^async def unhandled_exception_handler(request: Request, exc: Exception):$/", "language": "Python", "kind": "function", "signature": "(request: Request, exc: Exception)"}, {"_type": "tag", "name": "upload_dir", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^    upload_dir: str = Field(..., description=\"Directory path where file is saved.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadResponse", "scopeKind": "class"}, {"_type": "tag", "name": "upload_video", "path": "/home/kavia/workspace/code-generation/video-upload-platform-6838-6847/video_upload_backend/src/api/main.py", "pattern": "/^async def upload_video(file: UploadFile = File(..., description=\"The video file to upload.\")) ->/", "language": "Python", "typeref": "typename:UploadResponse", "kind": "function", "signature": "(file: UploadFile = File(..., description=\"The video file to upload.\"))"}], "hash": "1d0a36313e17fff97fd725f30d60f9cf", "format-version": 4, "code-base-name": "video_upload_backend", "filename": "video_upload_backend/src/api/main.py", "fields": [{"name": "MAX_FILE_SIZE_BYTES = 500 * 1024 * 1024  # 500 MB", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "UPLOAD_DIR = \"\\/upload\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] content_type", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str detail", "scope": "ErrorResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str filename", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str saved_as", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "int size_bytes", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str upload_dir", "scope": "UploadResponse", "scopeKind": "class", "description": "unavailable"}]}